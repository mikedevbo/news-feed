@using NewsFeed.Shared
@implements IDisposable
@inject StateContainer StateContainer
@inject HttpClient Http

<div class="block">
  @this.AccountId
</div>

@foreach(var tweet in this.tweets)
{
    <div class="box">
        @tweet.Text
    </div>
}

@code
{
    public string AccountId = "";
    public List<Tweet> tweets = new List<Tweet>();

    protected override void OnInitialized()
    {
        this.StateContainer.OnSelectedAccountIdChange += LoadTweets;
    }

    private async void LoadTweets(string accountId)
    {
        this.AccountId = accountId;
        var tweets = await Http.GetFromJsonAsync<List<Tweet>>($"NewsFeed/GetTweets?accountId={accountId}");

        if (tweets != null && tweets.Count() > 0)
        {
            this.tweets = tweets;
            base.StateHasChanged();
        }
    }

    public void Dispose()
    {
        this.StateContainer.OnSelectedAccountIdChange -= LoadTweets;
    }
}
