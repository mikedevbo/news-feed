@using static NewsFeed.Shared.Dto.TwitterMenuResponse
@inject StateContainer StateContainer
@inject HttpClient Http
@inject NewsFeedTwitterApiClient apiClient

<label>Group Name:</label>
<input type="text" @bind="this.inputGroupName" />
<button @onclick="e => this.AddGroup()">Add Group</button>

<input type="text" @bind="this.inputUserName" />
<button @onclick="e => this.AddUser()">Add User</button>

@foreach (var group in menuData.Groups)
{
    <p @onclick="e => this.selectedGroup = group">@group.Name</p>
    <ul>
        @foreach (var user in group.Users)
        {
            <li><a style="@(this.selectedUser == user ? "color: red" : string.Empty)" @onclick="e => this.selectedUser = user">@user.Name</a></li>
        }
    </ul>
}

@code {
    private TwitterMenuResponse menuData = new TwitterMenuResponse(new List<GroupResponse>());
    private GroupResponse? selectedGroup;
    private UserResponse? selectedUser;
    private string inputGroupName = string.Empty;
    private string inputUserName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        this.menuData = await apiClient.GetMenu(this.StateContainer.AccountId);
    }

    private async Task AddGroup()
    {
        var newGroup = await this.apiClient.AddGroup(this.StateContainer.AccountId, this.inputGroupName);
        this.menuData.Groups.Add(newGroup);
    }

    private async Task AddUser()
    {
        // await this.apiClient.AddUser(this.inputUserName, this.menuData.Groups[this.selectedItem.groupIndex].Id);
    }
}
